use rand::seq::SliceRandom;
use rand::Rng;

pub struct BandGenreGenerator {
    adjectives: Vec<String>,
    genres: Vec<String>,
    modifiers: Vec<String>,
    absurd_genres: Vec<String>,
}

impl BandGenreGenerator {
    pub fn new() -> Self {
        // List of adjectives to describe music genres
        let adjectives = vec![
            "Experimental", "Progressive", "Lo-Fi", "Hi-Fi", "Psychedelic",
            "Avant-garde", "Underground", "Alternative", "Post-modern", "Neo",
            "Retro", "Vintage", "Futuristic", "Minimalist", "Maximalist",
            "Ethereal", "Brutal", "Melodic", "Dissonant", "Atmospheric",
            "Ambient", "Aggressive", "Mellow", "Chaotic", "Symphonic",
            "Technical", "Abstract", "Conceptual", "Fusion", "Crossover",
            "Dystopian", "Utopian", "Apocalyptic", "Medieval", "Renaissance",
            "Baroque", "Classical", "Romantic", "Impressionist", "Expressionist",
            "Surrealist", "Dadaist", "Nihilistic", "Existential", "Transcendental",
            "Hypnotic", "Trance-inducing", "Meditative", "Introspective", "Extroverted"
        ].into_iter().map(String::from).collect();
        
        // List of base music genres
        let genres = vec![
            "Rock", "Metal", "Jazz", "Blues", "Folk",
            "Country", "Hip-Hop", "Rap", "Pop", "Electronic",
            "Dance", "Techno", "House", "Dubstep", "Drum & Bass",
            "Reggae", "Ska", "Punk", "Grunge", "Emo",
            "Goth", "Industrial", "Noise", "Ambient", "New Age",
            "Classical", "Opera", "Choral", "A Cappella", "Barbershop",
            "Soul", "R&B", "Funk", "Disco", "Motown",
            "Gospel", "Spiritual", "World", "Ethnic", "Traditional",
            "Bluegrass", "Americana", "Zydeco", "Polka", "Waltz",
            "Tango", "Salsa", "Bossa Nova", "Samba", "Flamenco"
        ].into_iter().map(String::from).collect();
        
        // List of modifiers to make genres more absurd
        let modifiers = vec![
            "but with kazoos instead of guitars",
            "performed entirely on children's toys",
            "with lyrics exclusively about breakfast cereals",
            "but every song ends with the Wilhelm scream",
            "where all instruments are replaced by cat meows",
            "with all songs performed in reverse",
            "but every third note is deliberately wrong",
            "with lyrics consisting only of corporate slogans",
            "performed underwater",
            "where the drummer is always playing a different song",
            "with all vocals run through a helium filter",
            "but the bass player is actually a professional wrestler",
            "with lyrics generated by AI trained on spam emails",
            "where every song transitions into the Seinfeld theme",
            "performed while riding unicycles",
            "with all instruments made from recycled fast food containers",
            "but the entire band is legally required to wear mittens",
            "with time signatures that change every 7 seconds",
            "where the lead singer only communicates in bird calls",
            "but all amplifiers are replaced with megaphones",
            "with lyrics consisting entirely of pharmaceutical side effects",
            "performed at half-speed on Tuesdays",
            "with all songs written in languages that don't exist",
            "but every performance includes a mandatory square dance break",
            "where the band members switch instruments after each verse",
            "with all percussion replaced by the sounds of typing on mechanical keyboards",
            "but the guitarist can only use one finger",
            "with lyrics sourced exclusively from 19th century shipping manifests",
            "performed while standing in kiddie pools filled with Jell-O",
            "where every album has exactly one death metal cover of a nursery rhyme"
        ].into_iter().map(String::from).collect();
        
        // List of completely absurd pre-made genre descriptions
        let absurd_genres = vec![
            "Aboriginal Death Metal",
            "Folk covers of popular love songs with the vowels removed from the lyrics",
            "Gregorian Trap",
            "Baroque Dubstep with harpsichord drops",
            "Vaporwave interpretations of IKEA assembly instructions",
            "Whale song remixes of 80s hair metal",
            "Minimalist symphonies composed entirely of doorbell sounds",
            "Pirate shanties about modern office problems",
            "Mongolian throat singing covers of disco classics",
            "Medieval madrigals about internet memes",
            "ASMR hardcore punk",
            "Operatic interpretations of fast food drive-thru conversations",
            "Smooth jazz versions of emergency broadcast system tests",
            "Electro-swing performed exclusively on dental equipment",
            "Ambient soundscapes created from recordings of library late fees being paid",
            "Bluegrass covers of video game boss battle themes",
            "Synthwave composed on calculators",
            "Orchestral arrangements of text message notification sounds",
            "Barbershop quartets singing cryptocurrency whitepapers",
            "Acid jazz performed by former tax attorneys",
            "Chiptune versions of famous court case transcripts",
            "Shoegaze anthems about minor inconveniences",
            "Reggaeton inspired by washing machine cycles",
            "Post-rock epics about waiting in line at the DMV",
            "Drone metal tributes to silent films",
            "Glitch hop created from malfunctioning kitchen appliances",
            "Yacht rock about landlocked states",
            "K-pop inspired by the sounds of dial-up internet",
            "Industrial techno made from recordings of actual industrial machinery",
            "Mumble rap versions of Shakespearean soliloquies"
        ].into_iter().map(String::from).collect();
        
        Self {
            adjectives,
            genres,
            modifiers,
            absurd_genres,
        }
    }
    
    pub fn generate_genre(&self, band_name: &str) -> String {
        let mut rng = rand::thread_rng();
        
        // 33% chance to use a completely absurd pre-made genre
        // 33% chance to use adjective + genre
        // 33% chance to use adjective + genre + modifier
        let genre_type = rng.gen_range(0..3);
        
        let genre = match genre_type {
            0 => {
                // Use a completely absurd pre-made genre
                self.absurd_genres.choose(&mut rng)
                    .map(|s| s.to_string())
                    .unwrap_or_else(|| "Experimental Jazz".to_string())
            },
            1 => {
                // Generate adjective + genre
                let adjective = self.adjectives.choose(&mut rng)
                    .map(|s| s.as_str())
                    .unwrap_or("Experimental");
                    
                let genre = self.genres.choose(&mut rng)
                    .map(|s| s.as_str())
                    .unwrap_or("Jazz");
                    
                format!("{} {}", adjective, genre)
            },
            _ => {
                // Generate adjective + genre + modifier
                let adjective = self.adjectives.choose(&mut rng)
                    .map(|s| s.as_str())
                    .unwrap_or("Experimental");
                    
                let genre = self.genres.choose(&mut rng)
                    .map(|s| s.as_str())
                    .unwrap_or("Jazz");
                    
                let modifier = self.modifiers.choose(&mut rng)
                    .map(|s| s.as_str())
                    .unwrap_or("");
                    
                format!("{} {} {}", adjective, genre, modifier)
            }
        };
        
        format!("What kind of music does {} play? {}", band_name, genre)
    }
}
